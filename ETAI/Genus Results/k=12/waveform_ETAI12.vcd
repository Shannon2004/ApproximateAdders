$date
	Mon Nov 18 21:30:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ETAI12_tb $end
$var wire 16 ! S [15:0] $end
$var wire 1 " Cout $end
$var parameter 32 # K $end
$var parameter 32 $ N $end
$var reg 16 % X [15:0] $end
$var reg 16 & Y [15:0] $end
$scope module uut $end
$var wire 1 ' UNCONNECTED_HIER_Z0 $end
$var wire 16 ( X [15:0] $end
$var wire 16 ) Y [15:0] $end
$var wire 1 * n_3 $end
$var wire 1 + n_2 $end
$var wire 1 , n_1 $end
$var wire 1 - n_0 $end
$var wire 16 . S [15:0] $end
$var wire 1 " Cout $end
$scope module g109__8246 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 Y $end
$var wire 1 * C $end
$upscope $end
$scope module g110__7098 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 Y $end
$var wire 1 * D $end
$var wire 1 - C $end
$upscope $end
$scope module g111__6131 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 7 Y $end
$var wire 1 + C $end
$upscope $end
$scope module g112__1881 $end
$var wire 1 8 A0N $end
$var wire 1 9 A1N $end
$var wire 1 * Y $end
$var wire 1 : \n$1 $end
$var wire 1 ; \n$2 $end
$var wire 1 < \n$3 $end
$var wire 1 , B0 $end
$upscope $end
$scope module g113__5115 $end
$var wire 1 = A $end
$var wire 1 > B $end
$var wire 1 ? Y $end
$upscope $end
$scope module g114 $end
$var wire 1 + Y $end
$var wire 1 , A $end
$upscope $end
$scope module g115__7482 $end
$var wire 1 @ A $end
$var wire 1 A B $end
$var wire 1 - Y $end
$upscope $end
$scope module g116__4733 $end
$var wire 1 B A $end
$var wire 1 C B $end
$var wire 1 , Y $end
$upscope $end
$scope module precise_adder $end
$var wire 1 ' Ci $end
$var wire 1 D UNCONNECTED_HIER_Z $end
$var wire 12 E X [11:0] $end
$var wire 12 F Y [11:0] $end
$var wire 13 G carry [12:0] $end
$var wire 12 H S [11:0] $end
$var wire 1 " Co $end
$scope module full_adder_chain[0].fa $end
$var wire 1 I A $end
$var wire 1 J B $end
$var wire 1 D Cin $end
$var wire 1 K Sum $end
$var wire 1 L Cout $end
$scope module g31__2398 $end
$var wire 1 J A $end
$var wire 1 I B $end
$var wire 1 L CO $end
$var wire 1 K S $end
$upscope $end
$upscope $end
$scope module full_adder_chain[10].fa $end
$var wire 1 M A $end
$var wire 1 N B $end
$var wire 1 O Cin $end
$var wire 1 P Sum $end
$var wire 1 Q Cout $end
$scope module g85__1705 $end
$var wire 1 M A $end
$var wire 1 N B $end
$var wire 1 O CI $end
$var wire 1 Q CO $end
$var wire 1 P S $end
$var wire 1 R \n$1 $end
$var wire 1 S \n$2 $end
$var wire 1 T \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[11].fa $end
$var wire 1 U A $end
$var wire 1 V B $end
$var wire 1 W Cin $end
$var wire 1 X Sum $end
$var wire 1 " Cout $end
$scope module g85__5122 $end
$var wire 1 U A $end
$var wire 1 V B $end
$var wire 1 W CI $end
$var wire 1 " CO $end
$var wire 1 X S $end
$var wire 1 Y \n$1 $end
$var wire 1 Z \n$2 $end
$var wire 1 [ \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[1].fa $end
$var wire 1 \ A $end
$var wire 1 ] B $end
$var wire 1 ^ Cin $end
$var wire 1 _ Sum $end
$var wire 1 ` Cout $end
$scope module g85__5107 $end
$var wire 1 \ A $end
$var wire 1 ] B $end
$var wire 1 ^ CI $end
$var wire 1 ` CO $end
$var wire 1 _ S $end
$var wire 1 a \n$1 $end
$var wire 1 b \n$2 $end
$var wire 1 c \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[2].fa $end
$var wire 1 d A $end
$var wire 1 e B $end
$var wire 1 f Cin $end
$var wire 1 g Sum $end
$var wire 1 h Cout $end
$scope module g85__6260 $end
$var wire 1 d A $end
$var wire 1 e B $end
$var wire 1 f CI $end
$var wire 1 h CO $end
$var wire 1 g S $end
$var wire 1 i \n$1 $end
$var wire 1 j \n$2 $end
$var wire 1 k \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[3].fa $end
$var wire 1 l A $end
$var wire 1 m B $end
$var wire 1 n Cin $end
$var wire 1 o Sum $end
$var wire 1 p Cout $end
$scope module g85__4319 $end
$var wire 1 l A $end
$var wire 1 m B $end
$var wire 1 n CI $end
$var wire 1 p CO $end
$var wire 1 o S $end
$var wire 1 q \n$1 $end
$var wire 1 r \n$2 $end
$var wire 1 s \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[4].fa $end
$var wire 1 t A $end
$var wire 1 u B $end
$var wire 1 v Cin $end
$var wire 1 w Sum $end
$var wire 1 x Cout $end
$scope module g85__8428 $end
$var wire 1 t A $end
$var wire 1 u B $end
$var wire 1 v CI $end
$var wire 1 x CO $end
$var wire 1 w S $end
$var wire 1 y \n$1 $end
$var wire 1 z \n$2 $end
$var wire 1 { \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[5].fa $end
$var wire 1 | A $end
$var wire 1 } B $end
$var wire 1 ~ Cin $end
$var wire 1 !" Sum $end
$var wire 1 "" Cout $end
$scope module g85__5526 $end
$var wire 1 | A $end
$var wire 1 } B $end
$var wire 1 ~ CI $end
$var wire 1 "" CO $end
$var wire 1 !" S $end
$var wire 1 #" \n$1 $end
$var wire 1 $" \n$2 $end
$var wire 1 %" \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[6].fa $end
$var wire 1 &" A $end
$var wire 1 '" B $end
$var wire 1 (" Cin $end
$var wire 1 )" Sum $end
$var wire 1 *" Cout $end
$scope module g85__6783 $end
$var wire 1 &" A $end
$var wire 1 '" B $end
$var wire 1 (" CI $end
$var wire 1 *" CO $end
$var wire 1 )" S $end
$var wire 1 +" \n$1 $end
$var wire 1 ," \n$2 $end
$var wire 1 -" \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[7].fa $end
$var wire 1 ." A $end
$var wire 1 /" B $end
$var wire 1 0" Cin $end
$var wire 1 1" Sum $end
$var wire 1 2" Cout $end
$scope module g85__3680 $end
$var wire 1 ." A $end
$var wire 1 /" B $end
$var wire 1 0" CI $end
$var wire 1 2" CO $end
$var wire 1 1" S $end
$var wire 1 3" \n$1 $end
$var wire 1 4" \n$2 $end
$var wire 1 5" \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[8].fa $end
$var wire 1 6" A $end
$var wire 1 7" B $end
$var wire 1 8" Cin $end
$var wire 1 9" Sum $end
$var wire 1 :" Cout $end
$scope module g85__1617 $end
$var wire 1 6" A $end
$var wire 1 7" B $end
$var wire 1 8" CI $end
$var wire 1 :" CO $end
$var wire 1 9" S $end
$var wire 1 ;" \n$1 $end
$var wire 1 <" \n$2 $end
$var wire 1 =" \n$3 $end
$upscope $end
$upscope $end
$scope module full_adder_chain[9].fa $end
$var wire 1 >" A $end
$var wire 1 ?" B $end
$var wire 1 @" Cin $end
$var wire 1 A" Sum $end
$var wire 1 B" Cout $end
$scope module g85__2802 $end
$var wire 1 >" A $end
$var wire 1 ?" B $end
$var wire 1 @" CI $end
$var wire 1 B" CO $end
$var wire 1 A" S $end
$var wire 1 C" \n$1 $end
$var wire 1 D" \n$2 $end
$var wire 1 E" \n$3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 $
b1100 #
$end
#0
$dumpvars
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
b0 H
bz00000000000z G
b0 F
b0 E
zD
0C
0B
0A
0@
0?
0>
0=
1<
1;
1:
09
08
07
06
05
04
03
02
01
00
0/
b0 .
0-
1,
0+
0*
b0 )
b0 (
z'
b0 &
b0 %
0"
b0 !
$end
#10000
b100000000 H
19"
18"
bz00010000000z G
12"
13"
1/"
b1000000000001 !
b1000000000001 .
14
1."
b10000000 F
12
b10000000 E
b100000000001 &
b100000000001 )
b100000000000 %
b100000000000 (
#20000
1j
1k
1g
1r
1s
1o
1w
09"
1b
1c
b11110 H
1_
1f
1n
1v
08"
1^
1`
1h
1p
02"
bz00000001111z G
1L
1a
1i
1q
03"
0:
1+
1*
1J
1]
1e
1m
0/"
0;
1I
1\
1d
1l
0."
11
17
0<
b111101111 !
b111101111 .
1?
1-
0,
b1111 F
1/
15
18
1=
1A
1B
b1111 E
10
13
16
19
1>
1@
1C
b11111111 &
b11111111 )
b11111111 %
b11111111 (
#30000
1$"
1%"
1!"
1,"
1-"
1)"
14"
15"
11"
1<"
1="
19"
1D"
1E"
1A"
1S
1T
1P
1Z
1[
b1111111111101111 !
b1111111111101111 .
b111111111110 H
1X
1~
1("
10"
18"
1@"
1O
1W
1x
1""
1*"
12"
1:"
1B"
bz11111111111z G
1Q
1"
1z
1y
1{
1#"
1+"
13"
1;"
1C"
1R
1Y
1u
1}
1'"
1/"
17"
1?"
1N
1V
1t
1|
1&"
1."
16"
1>"
1M
1U
b111111111111 F
b111111111111 E
b1111111111111111 &
b1111111111111111 )
b1111111111111111 %
b1111111111111111 (
#40000
0"
0Z
0W
0Q
0T
0O
0B"
0D"
0@"
0:"
0="
08"
02"
04"
00"
0*"
0-"
0("
0""
0$"
0~
0x
0{
0v
0p
0r
0n
0h
0k
0f
0`
0b
0^
0*
bz00000000000z G
0L
1K
0i
0j
1g
0y
0z
1w
0+"
0,"
1)"
0;"
0<"
19"
0R
0S
1P
1:
0a
0c
1_
0q
0s
1o
0#"
0%"
1!"
03"
05"
11"
0C"
0E"
1A"
0Y
0[
b1111111111111111 !
b1111111111111111 .
b111111111111 H
1X
0+
0J
0e
0u
0'"
07"
0N
1;
0\
0l
0|
0."
0>"
0U
0-
1,
b101010101010 F
02
05
08
b10101010101 E
00
0>
0@
0C
b1010101010101010 &
b1010101010101010 )
b101010101010101 %
b101010101010101 (
#50000
1r
1s
1$"
1%"
14"
15"
1j
1k
1z
1{
1,"
1-"
1b
1c
1n
1~
10"
1f
1v
1("
18"
1^
1h
1x
1*"
1`
1p
1""
12"
bz00011111111z G
1L
0K
1i
1g
1y
1w
1+"
1)"
0A"
0X
0:
1a
1_
1q
1o
1#"
1!"
13"
11"
19"
b1111111101111 !
b1111111101111 .
b111111110 H
0P
1+
1*
1J
1e
1u
1'"
0?"
0V
0;
1\
1l
1|
1."
06"
0M
1-
0,
b11111111 F
12
15
18
b11111111 E
10
1>
1@
1C
b111111111111 &
b111111111111 )
b111111111111 %
b111111111111 (
#60000
1"
0z
0{
0w
1[
0v
08"
1W
0p
02"
1Q
0g
0s
04"
0D"
0E"
0A"
1S
0f
0n
00"
0@"
1O
07
0`
0h
0*"
0:"
bz11000110001z G
1B"
0b
0j
0q
0r
1o
0#"
0$"
0!"
0,"
0P
0+
0*
0a
0c
0i
0k
0+"
0-"
03"
05"
11"
0="
19"
1C"
b1110010101011 !
b1110010101011 .
b111001010 H
0X
1:
0]
0e
0m
0}
0'"
1?"
1N
1;
1,
0\
0d
0&"
0."
16"
1>"
1U
1<
b11010010001 F
05
08
0=
0B
b101100111001 E
03
06
09
b110100100010011 &
b110100100010011 )
b1011001110011010 %
b1011001110011010 (
#70000
