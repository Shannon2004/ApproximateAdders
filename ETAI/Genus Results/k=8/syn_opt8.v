
// Generated by Cadence Genus(TM) Synthesis Solution 21.10-p002_1
// Generated on: Nov 14 2024 22:58:37 IST (Nov 14 2024 17:28:37 UTC)

// Verification Directory fv/ETAI8 

module full_adder(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDHX1 g31__2398(.A (B), .B (A), .CO (Cout), .S (Sum));
endmodule

module full_adder_7_1(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDFX1 g85__5107(.A (A), .B (B), .CI (Cin), .CO (Cout), .S (Sum));
endmodule

module full_adder_7_2(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDFX1 g85__6260(.A (A), .B (B), .CI (Cin), .CO (Cout), .S (Sum));
endmodule

module full_adder_7_3(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDFX1 g85__4319(.A (A), .B (B), .CI (Cin), .CO (Cout), .S (Sum));
endmodule

module full_adder_7_4(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDFX1 g85__8428(.A (A), .B (B), .CI (Cin), .CO (Cout), .S (Sum));
endmodule

module full_adder_7_5(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDFX1 g85__5526(.A (A), .B (B), .CI (Cin), .CO (Cout), .S (Sum));
endmodule

module full_adder_7_6(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDFX1 g85__6783(.A (A), .B (B), .CI (Cin), .CO (Cout), .S (Sum));
endmodule

module full_adder_7(A, B, Cin, Sum, Cout);
  input A, B, Cin;
  output Sum, Cout;
  wire A, B, Cin;
  wire Sum, Cout;
  ADDFX1 g85__3680(.A (A), .B (B), .CI (Cin), .CO (Cout), .S (Sum));
endmodule

module RCA_N8(X, Y, Ci, S, Co);
  input [7:0] X, Y;
  input Ci;
  output [7:0] S;
  output Co;
  wire [7:0] X, Y;
  wire Ci;
  wire [7:0] S;
  wire Co;
  wire [8:0] carry;
  wire UNCONNECTED_HIER_Z;
  full_adder \full_adder_chain[0].fa (.A (X[0]), .B (Y[0]), .Cin
       (UNCONNECTED_HIER_Z), .Sum (S[0]), .Cout (carry[1]));
  full_adder_7_1 \full_adder_chain[1].fa (.A (X[1]), .B (Y[1]), .Cin
       (carry[1]), .Sum (S[1]), .Cout (carry[2]));
  full_adder_7_2 \full_adder_chain[2].fa (.A (X[2]), .B (Y[2]), .Cin
       (carry[2]), .Sum (S[2]), .Cout (carry[3]));
  full_adder_7_3 \full_adder_chain[3].fa (.A (X[3]), .B (Y[3]), .Cin
       (carry[3]), .Sum (S[3]), .Cout (carry[4]));
  full_adder_7_4 \full_adder_chain[4].fa (.A (X[4]), .B (Y[4]), .Cin
       (carry[4]), .Sum (S[4]), .Cout (carry[5]));
  full_adder_7_5 \full_adder_chain[5].fa (.A (X[5]), .B (Y[5]), .Cin
       (carry[5]), .Sum (S[5]), .Cout (carry[6]));
  full_adder_7_6 \full_adder_chain[6].fa (.A (X[6]), .B (Y[6]), .Cin
       (carry[6]), .Sum (S[6]), .Cout (carry[7]));
  full_adder_7 \full_adder_chain[7].fa (.A (X[7]), .B (Y[7]), .Cin
       (carry[7]), .Sum (S[7]), .Cout (Co));
endmodule

module ETAI8(X, Y, S, Cout);
  input [15:0] X, Y;
  output [15:0] S;
  output Cout;
  wire [15:0] X, Y;
  wire [15:0] S;
  wire Cout;
  wire UNCONNECTED_HIER_Z0, n_0, n_1, n_2, n_3, n_4, n_5, n_6;
  wire n_7, n_8, n_9;
  RCA_N8 precise_adder(.X (X[15:8]), .Y (Y[15:8]), .Ci
       (UNCONNECTED_HIER_Z0), .S (S[15:8]), .Co (Cout));
  OR4X1 g296__1617(.A (X[1]), .B (Y[1]), .C (n_8), .D (n_9), .Y (S[1]));
  NAND3BXL g297__2802(.AN (n_9), .B (n_4), .C (n_7), .Y (S[0]));
  OR4X1 g298__1705(.A (Y[2]), .B (X[2]), .C (n_5), .D (n_9), .Y (S[2]));
  OR4X1 g299__5122(.A (Y[3]), .B (X[3]), .C (n_6), .D (n_5), .Y (S[3]));
  OR4X1 g300__8246(.A (X[4]), .B (Y[4]), .C (n_1), .D (n_6), .Y (S[4]));
  OR3XL g301__7098(.A (Y[5]), .B (X[5]), .C (n_6), .Y (S[5]));
  AO21X1 g302__6131(.A0 (Y[3]), .A1 (X[3]), .B0 (n_6), .Y (n_9));
  INVXL g303(.A (n_7), .Y (n_8));
  OR3XL g304__1881(.A (X[6]), .B (Y[6]), .C (n_3), .Y (S[6]));
  AOI21XL g305__5115(.A0 (Y[2]), .A1 (X[2]), .B0 (n_5), .Y (n_7));
  OAI2BB1X1 g306__7482(.A0N (Y[6]), .A1N (X[6]), .B0 (n_2), .Y (n_6));
  AOI211XL g307__4733(.A0 (Y[1]), .A1 (X[1]), .B0 (Y[0]), .C0 (X[0]),
       .Y (n_4));
  OAI2BB1X1 g308__6161(.A0N (Y[4]), .A1N (X[4]), .B0 (n_0), .Y (n_5));
  OR2XL g309__9315(.A (Y[7]), .B (X[7]), .Y (S[7]));
  INVXL g310(.A (n_2), .Y (n_3));
  INVXL g311(.A (n_0), .Y (n_1));
  NAND2XL g312__9945(.A (Y[7]), .B (X[7]), .Y (n_2));
  NAND2XL g313__2883(.A (Y[5]), .B (X[5]), .Y (n_0));
endmodule

