
// Generated by Cadence Genus(TM) Synthesis Solution 21.10-p002_1
// Generated on: Nov 13 2024 12:00:31 IST (Nov 13 2024 06:30:31 UTC)

// Verification Directory fv/RCA 

module fulladder(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__2398(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_30(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__5107(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_29(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__6260(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_28(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__4319(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_27(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__8428(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_26(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__5526(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_25(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__6783(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_24(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__3680(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_23(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__1617(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_22(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__2802(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_21(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__1705(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_20(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__5122(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_19(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__8246(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_18(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__7098(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_17(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__6131(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module fulladder_16(X, Y, Ci, S, Co);
  input X, Y, Ci;
  output S, Co;
  wire X, Y, Ci;
  wire S, Co;
  ADDFX1 g66__1881(.A (X), .B (Y), .CI (Ci), .CO (Co), .S (S));
endmodule

module RCA(X, Y, Ci, S, Co);
  input [15:0] X, Y;
  input Ci;
  output [15:0] S;
  output Co;
  wire [15:0] X, Y;
  wire Ci;
  wire [15:0] S;
  wire Co;
  wire [14:0] w;
  fulladder \adder_stage[0].genblk1.FA (X[0], Y[0], Ci, S[0], w[0]);
  fulladder_30 \adder_stage[1].genblk1.FA (X[1], Y[1], w[0], S[1],
       w[1]);
  fulladder_29 \adder_stage[2].genblk1.FA (X[2], Y[2], w[1], S[2],
       w[2]);
  fulladder_28 \adder_stage[3].genblk1.FA (X[3], Y[3], w[2], S[3],
       w[3]);
  fulladder_27 \adder_stage[4].genblk1.FA (X[4], Y[4], w[3], S[4],
       w[4]);
  fulladder_26 \adder_stage[5].genblk1.FA (X[5], Y[5], w[4], S[5],
       w[5]);
  fulladder_25 \adder_stage[6].genblk1.FA (X[6], Y[6], w[5], S[6],
       w[6]);
  fulladder_24 \adder_stage[7].genblk1.FA (X[7], Y[7], w[6], S[7],
       w[7]);
  fulladder_23 \adder_stage[8].genblk1.FA (X[8], Y[8], w[7], S[8],
       w[8]);
  fulladder_22 \adder_stage[9].genblk1.FA (X[9], Y[9], w[8], S[9],
       w[9]);
  fulladder_21 \adder_stage[10].genblk1.FA (X[10], Y[10], w[9], S[10],
       w[10]);
  fulladder_20 \adder_stage[11].genblk1.FA (X[11], Y[11], w[10], S[11],
       w[11]);
  fulladder_19 \adder_stage[12].genblk1.FA (X[12], Y[12], w[11], S[12],
       w[12]);
  fulladder_18 \adder_stage[13].genblk1.FA (X[13], Y[13], w[12], S[13],
       w[13]);
  fulladder_17 \adder_stage[14].genblk1.FA (X[14], Y[14], w[13], S[14],
       w[14]);
  fulladder_16 \adder_stage[15].genblk1.FA (X[15], Y[15], w[14], S[15],
       Co);
endmodule

